@startuml
'http://plantuml.com/skinparam.html
skinparam monochrome true
skinparam packageStyle rect
skinparam shadowing false


participant floorRoute  as route
participant floorController as controller
participant "mapper2:Json2DTO" as jsonMapper
participant "IFloorDTO1:IFloorDTO" as dto1
participant "IFloorDTO1.1:IFloorDTO" as dto2
participant "IFloorService1:IFloorService" as service
participant "floor1:Floor" as domain
participant "floorRepo1:IFloorRepo" as repository
participant "mapper2:Domain2Data" as mapper1
participant "Floor1:FloorData" as data
participant "dbDriver1:IDBDriver" as db
participant "Floor1saved:Floor" as savedDomain
participant "Floorsaved1:FloorData" as savedData



-> route: Post /floors / (json)
activate route
  route->controller: createFloor(json)
  activate controller
    controller -> controller:validate(json)
    controller -> jsonMapper:map2DTO(json)
    activate jsonMapper
    jsonMapper -> dto1**:create(json)
    dto1-->jsonMapper:floorDTO1
    jsonMapper --> controller:floorDTO1
    deactivate
    controller ->service:createFloor(floorDTO1)
    activate service
    service-> domain**:create(floorDTO1)
    domain --> service:floor1
    service->repository:save(floor1)
    activate repository
    repository -> mapper1:map2Data(floor1)
    activate mapper1
    mapper1 -> domain:getNumber()
    activate domain
    domain--> mapper1:number
    mapper1 -> domain:getBuildingId()
    domain--> mapper1:buildingId
    mapper1 -> domain:getDescription()
    domain--> mapper1:description
    deactivate
    mapper1 -> data**:create(number,buildingId,description, ...)
    data --> mapper1:floorData
    mapper1 --> repository:floorData
    deactivate
    repository -> db:save(floorData)
    activate db
    db -> savedData**:create(savedFloor)
    db --> repository:savedFloor
    deactivate
    repository->mapper1:map2Model(savedFloor)
    activate mapper1
    mapper1 -> savedDomain**
    savedDomain --> mapper1:floorSaved
    mapper1 --> repository:floorSaved
    deactivate
    repository --> service:floorSaved
    deactivate
    service -> jsonMapper: map2dto(floorSaved)
    activate jsonMapper
    jsonMapper -> savedDomain: getNumber()
    activate savedDomain
    savedDomain --> jsonMapper:number
    jsonMapper -> savedDomain: getBuildingId()
    savedDomain --> jsonMapper:buildingId
    jsonMapper -> savedDomain: getDescription()
    savedDomain --> jsonMapper:description
    deactivate
    jsonMapper --> dto2**:create(number,buildingId,description, ...)
    dto2 --> jsonMapper:savedFloorDTO
    jsonMapper --> service: savedFloorDTO
    deactivate
    service --> controller:savedFloorDTO
    deactivate
    controller -> jsonMapper:map2Json(savedFloorDTO):json
    activate jsonMapper
    jsonMapper --> controller:json
    deactivate
    controller->controller:generateRes(json)
    controller--> route:response
    deactivate
    <- route:response
    deactivate





@enduml